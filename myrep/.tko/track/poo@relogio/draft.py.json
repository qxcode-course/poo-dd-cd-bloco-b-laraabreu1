{
    "patches": [
        {
            "label": "2025-10-06_16-54-10",
            "content": "@@ -1,428 +1,294 @@\n-class Watch:%0A    def __init__(self, hora: int = 0, minuto: int = 0, segundo: int = 0):%0A        self.__hora = 0%0A        self.__minuto = 0%0A        self.__segundo = 0%0A        self.set_hora(hora)%0A        self.set_minuto(minuto)%0A        self.set_segundo(segundo)%0A%0A    def get_hora(self):%0A        return self.__hora%0A%0A    def get_minuto(self):%0A        return self.__minuto%0A%0A    def get_segundo(self):%0A        return self.__segundo%0A\n+# c%C3%B3digo do Tempo%0A# 1. usar o __ no come%C3%A7o pra definir private%0A# 2. criar um get_algo para leitura e retornar o valor%0A# 3. criar um set_algo que recebe um valor%0A# 4. parametros default utilizados quando o valor n%C3%A3o vem%0A# 5. parametros nomeados quando quero um valor especifico%0A%0Aclass Tempo:\n %0A   \n@@ -296,16 +296,16 @@\n def \n-set_hora\n+__init__\n (sel\n@@ -315,43 +315,34 @@\n hora\n-):%0A        if 0 %3C= hora %3C= 23:%0A    \n+: int = 0, min: int = 0):%0A\n     \n@@ -357,18 +357,12 @@\n .__h\n-ora = hora\n+ = 0\n %0A   \n@@ -370,124 +370,28 @@\n     \n+s\n el\n-se:%0A            print(%22fail: hora invalida%22)%0A%0A    def set_minuto(self, minuto):%0A        if 0 %3C= minuto %3C= 59:%0A    \n+f.set_hora(hora)%0A\n     \n@@ -406,22 +406,14 @@\n .__m\n-inuto\n  = min\n-uto\n %0A   \n@@ -421,377 +421,144 @@\n     \n-else:%0A            print(%22fail: minuto invalido%22)%0A%0A    def set_segundo(self, segundo):%0A        if 0 %3C= segundo %3C= 59:%0A            self.__segundo = segundo%0A        else:%0A            print(%22fail: segundo invalido%22)%0A%0Adef main():%0A    relogio = Watch()%0A    while True:%0A        line = input()%0A\n+self.__s = 0%0A%0A    def set_hora(self, valor: int) -%3E None: # escrita%0A        if valor %3E 11 or valor %3C 0:%0A     \n        \n- \n print(\n-f%22$%7Bline%7D%22)%0A        args = line.split()%0A%0A        if args%5B0%5D == %22end%22:\n+%22hora errada%22)\n %0A   \n@@ -570,13 +570,14 @@\n     \n-b\n re\n-ak\n+turn\n %0A   \n@@ -585,443 +585,205 @@\n     \n+s\n el\n-if args%5B0%5D == %22init%22:%0A            relogio = Watch(int(args%5B1%5D), int(args%5B2%5D), int(args%5B3%5D))%0A        elif args%5B0%5D == %22set%22:%0A            relogio.set_hour(int(args%5B1%5D))%0A            relogio.set_minute(int(args%5B2%5D))%0A            relogio.set_second(int(args%5B3%5D)) %0A        elif args%5B0%5D == %22show%22:%0A            print(relogio)%0A        #elif args%5B0%5D == %22next%22:%0A            #relogio.next_second()%0A        else:%0A            print(%22comando invalido%22)%0A%0A\n+f.__h = valor%0A%0A    def get_hora(self) -%3E int: # leitura%0A        return self.__h%0A%0A    def __str__(self):%0A        return f%22%7Bself.__h%7D:%7Bself.__m%7D:%7Bself.__s%7D%22%0A%0Aagora = Tempo(min=55, hora=9)%0Aprint(agora)\n",
            "lines": "28"
        },
        {
            "label": "2025-10-24_22-22-12",
            "content": "@@ -887,109 +887,8 @@\n %22)%0A%0A\n-    def __str__(self):%0A        return f%22%7Bself.__hora:02d%7D:%7Bself.__minuto:02d%7D:%7Bself.__segundo:02d%7D%22%0A%0A\n def \n",
            "lines": "58"
        },
        {
            "label": "2025-10-24_22-29-20",
            "content": "@@ -986,393 +986,8 @@\n 2d%7D%22\n-%0A    %0A    def nextSecond(self):%0A        if self._segundo %3C 59:%0A            self._segundo += 1%0A        else:%0A            self._segundo = 0%0A            if self._minuto %3C 59:%0A                self._minuto += 1%0A            else:%0A                self._minuto = 0%0A                if self._hora %3C 23:%0A                    self._hora += 1%0A                else:%0A                    self._hora = 0\n %0A%0Ade\n@@ -1020,15 +1020,8 @@\n tch(\n-0, 0, 0\n )%0A  \n",
            "lines": "61"
        },
        {
            "label": "2025-10-24_22-32-09",
            "content": "@@ -1998,14 +1998,8 @@\n lido%22)%0A%0A\n-main()\n",
            "lines": "75"
        },
        {
            "label": "2025-10-24_22-32-31",
            "content": "@@ -1877,32 +1877,33 @@\n elogio)%0A        \n+#\n elif args%5B0%5D == \n@@ -1914,32 +1914,33 @@\n t%22:%0A            \n+#\n relogio.next_sec\n",
            "lines": "76"
        },
        {
            "label": "2025-10-24_22-33-54",
            "content": "@@ -1710,18 +1710,18 @@\n o.set_ho\n+u\n r\n-a\n (int(arg\n@@ -1756,17 +1756,17 @@\n et_minut\n-o\n+e\n (int(arg\n@@ -1798,21 +1798,20 @@\n o.set_se\n-gu\n+co\n nd\n-o\n (int(arg\n@@ -1929,25 +1929,26 @@\n relogio.next\n-S\n+_s\n econd()%0A    \n",
            "lines": "76"
        },
        {
            "label": "2025-10-24_22-34-46",
            "content": "@@ -1014,32 +1014,35 @@\n (self):%0A        \n+if \n self._segundo +=\n@@ -1039,20 +1039,21 @@\n segundo \n-+= 1\n+%3C 59:\n %0A       \n@@ -1045,34 +1045,35 @@\n o %3C 59:%0A        \n-if\n+   \n  self._segundo %3E\n@@ -1071,20 +1071,33 @@\n segundo \n-%3E 59\n++= 1%0A        else\n :%0A      \n@@ -1124,32 +1124,35 @@\n = 0%0A            \n+if \n self._minuto += \n@@ -1148,21 +1148,25 @@\n _minuto \n-+= 1%0A\n+%3C 59:%0A   \n         \n@@ -1161,34 +1161,32 @@\n %0A               \n-if\n  self._minuto %3E \n@@ -1187,12 +1187,29 @@\n uto \n-%3E 59\n++= 1%0A            else\n :%0A  \n@@ -1247,32 +1247,35 @@\n                 \n+if \n self._hora += 1%0A\n@@ -1269,20 +1269,21 @@\n f._hora \n-+= 1\n+%3C 23:\n %0A       \n@@ -1283,34 +1283,35 @@\n                 \n-if\n+   \n  self._hora %3E 23\n@@ -1310,12 +1310,33 @@\n ora \n-%3E 23\n++= 1%0A                else\n :%0A  \n",
            "lines": "76"
        },
        {
            "label": "2025-10-24_22-40-08",
            "content": "@@ -434,12 +434,12 @@\n set_\n-time\n+hora\n (sel\n@@ -449,25 +449,8 @@\n hora\n-, minuto, segundo\n ):%0A \n@@ -478,53 +478,8 @@\n = 23\n- and 0 %3C= minuto %3C= 59 and 0 %3C= segundo %3C= 59\n :%0A  \n@@ -490,24 +490,25 @@\n       self._\n+_\n hora = hora%0A\n@@ -519,33 +519,112 @@\n     \n-    \n+else:%0A            print(%22fail: hora invalida%22)%0A%0A    def set_minuto(\n self\n-._\n+, \n minuto\n- \n+):%0A        if 0 %3C\n = minuto\n %0A   \n@@ -619,16 +619,23 @@\n = minuto\n+ %3C= 59:\n %0A       \n@@ -649,60 +649,37 @@\n lf._\n-segundo = segundo%0A        elif not (0 %3C= hora %3C= 23)\n+_minuto = minuto%0A        else\n :%0A  \n@@ -697,36 +697,38 @@\n rint(%22fail: \n-hora\n+minuto\n  invalid\n a%22)%0A        \n@@ -719,48 +719,78 @@\n alid\n-a\n+o\n %22)%0A\n+%0A\n     \n-    elif not (0 %3C= minut\n+def set_segundo(self, segundo):%0A        if 0 %3C= segund\n o %3C= 59\n-)\n :%0A  \n@@ -803,76 +803,45 @@\n     \n-print(%22fail: minuto invalido%22)%0A        elif not (0 %3C= segundo %3C= 59)\n+self.__segundo = segundo%0A        else\n :%0A  \n",
            "lines": "73"
        },
        {
            "label": "2025-10-24_22-40-55",
            "content": "@@ -1639,20 +1639,20 @@\n gio.set_\n-time\n+hora\n (int(arg\n@@ -1656,32 +1656,95 @@\n args%5B1%5D)\n-, int(args%5B2%5D), \n+)%0A            relogio.set_minuto(int(args%5B2%5D))%0A            relogio.set_segundo(\n int(args\n",
            "lines": "67"
        },
        {
            "label": "2025-10-24_22-41-34",
            "content": "@@ -430,20 +430,20 @@\n def set_\n-hora\n+time\n (self, h\n@@ -445,16 +445,33 @@\n lf, hora\n+, minuto, segundo\n ):%0A     \n@@ -491,16 +491,61 @@\n ra %3C= 23\n+ and 0 %3C= minuto %3C= 59 and 0 %3C= segundo %3C= 59\n :%0A      \n@@ -552,25 +552,24 @@\n       self._\n-_\n hora = hora%0A\n@@ -580,112 +580,33 @@\n     \n-else:%0A            print(%22fail: hora invalida%22)%0A%0A    def set_minuto(\n+    \n self\n-, \n+._\n minuto\n-):%0A        if 0 %3C\n+ \n = minuto\n  %3C= \n@@ -601,23 +601,16 @@\n = minuto\n- %3C= 59:\n %0A       \n@@ -624,37 +624,60 @@\n lf._\n-_minuto = minuto%0A        else\n+segundo = segundo%0A        elif not (0 %3C= hora %3C= 23)\n :%0A  \n@@ -703,22 +703,20 @@\n il: \n-minuto\n+hora\n  invalid\n o%22)%0A\n@@ -715,78 +715,48 @@\n alid\n-o%22)%0A%0A\n+a%22)%0A   \n     \n-def set_segundo(self, segundo):%0A        if 0 %3C= segund\n+ elif not (0 %3C= minut\n o %3C= 59\n+)\n :%0A  \n@@ -769,45 +769,76 @@\n     \n-self.__segundo = segundo%0A        else\n+print(%22fail: minuto invalido%22)%0A        elif not (0 %3C= segundo %3C= 59)\n :%0A  \n@@ -1639,20 +1639,20 @@\n gio.set_\n-hora\n+time\n (int(arg\n@@ -1660,87 +1660,24 @@\n %5B1%5D)\n-)%0A            relogio.set_minuto(int(args%5B2%5D))%0A            relogio.set_segundo(\n+, int(args%5B2%5D), \n int(\n",
            "lines": "65"
        },
        {
            "label": "2025-10-24_22-41-46",
            "content": "@@ -1,18 +1,19 @@\n class \n-Time\n+Watch\n :%0A    de\n@@ -35,31 +35,53 @@\n , ho\n-ur=0, minute=0, second=\n+ra: int = 0, minuto: int = 0, segundo: int = \n 0):%0A\n@@ -89,28 +89,30 @@\n        self.\n-hour\n+__hora\n  = 0%0A       \n@@ -109,38 +109,40 @@\n  0%0A        self.\n+__\n minut\n-e\n+o\n  = 0%0A        sel\n@@ -135,38 +135,41 @@\n  0%0A        self.\n-seco\n+__segu\n nd\n+o\n  = 0%0A        sel\n@@ -177,30 +177,251 @@\n .set\n-(hour, minute, second)\n+_hora(hora)%0A        self.set_minuto(minuto)%0A        self.set_segundo(segundo)%0A%0A    def get_hora(self):%0A        return self.__hora%0A%0A    def get_minuto(self):%0A        return self.__minuto%0A%0A    def get_segundo(self):%0A        return self.__segundo\n %0A%0A  \n@@ -432,18 +432,18 @@\n f set_ho\n-u\n r\n+a\n (self, h\n@@ -443,18 +443,18 @@\n self, ho\n-u\n r\n+a\n ):%0A     \n@@ -466,18 +466,18 @@\n  0 %3C= ho\n-u\n r\n+a\n  %3C= 23:%0A\n@@ -497,19 +497,21 @@\n elf.\n-hour\n+__hora\n  = ho\n-u\n r\n+a\n %0A   \n@@ -580,17 +580,17 @@\n et_minut\n-e\n+o\n (self, m\n@@ -593,17 +593,17 @@\n f, minut\n-e\n+o\n ):%0A     \n@@ -618,17 +618,17 @@\n %3C= minut\n-e\n+o\n  %3C= 59:%0A\n@@ -648,22 +648,24 @@\n elf.\n+__\n minut\n-e\n+o\n  = minut\n e%0A  \n@@ -660,17 +660,17 @@\n  = minut\n-e\n+o\n %0A       \n@@ -734,20 +734,21 @@\n f set_se\n-co\n+gu\n nd\n+o\n (self, s\n@@ -744,28 +744,29 @@\n ndo(self, se\n-co\n+gu\n nd\n+o\n ):%0A        i\n@@ -774,20 +774,21 @@\n  0 %3C= se\n-co\n+gu\n nd\n+o\n  %3C= 59:%0A\n@@ -808,23 +808,27 @@\n elf.\n-seco\n+__segu\n nd\n+o\n  = se\n-co\n+gu\n nd\n+o\n %0A   \n@@ -895,186 +895,104 @@\n def \n-set(self, hour, minute, second):%0A        # Cada parte deve ser validada separadamente%0A        self.set_hour(hour)%0A        \n+__str__(self):%0A        return f%22%7Bself.__hora:02d%7D:%7B\n self.\n-set\n+_\n _minut\n-e(minute)%0A        self.set_second(second)%0A\n+o:02d%7D:%7Bself.__segundo:02d%7D%22%0A    \n %0A   \n@@ -1027,22 +1027,24 @@\n    self.\n+_\n se\n-co\n+gu\n nd\n+o\n  += 1%0A  \n@@ -1057,22 +1057,24 @@\n if self.\n+_\n se\n-co\n+gu\n nd\n+o\n  %3E 59:%0A \n@@ -1089,22 +1089,24 @@\n    self.\n+_\n se\n-co\n+gu\n nd\n+o\n  = 0%0A   \n@@ -1119,22 +1119,23 @@\n    self.\n+_\n minut\n-e\n+o\n  += 1%0A  \n@@ -1152,22 +1152,23 @@\n if self.\n+_\n minut\n-e\n+o\n  %3E 59:%0A \n@@ -1187,22 +1187,23 @@\n    self.\n+_\n minut\n-e\n+o\n  = 0%0A   \n@@ -1220,20 +1220,21 @@\n    self.\n+_\n ho\n-u\n r\n+a\n  += 1%0A  \n@@ -1255,20 +1255,21 @@\n if self.\n+_\n ho\n-u\n r\n+a\n  %3E 23:%0A \n@@ -1296,224 +1296,98 @@\n elf.\n+_\n ho\n-u\n r\n+a\n  = 0%0A%0A\n-    def __str__(self):%0A        return f%22%7Bself.hour:02d%7D:%7Bself.minute:02d%7D:%7Bself.second:02d%7D%22%0A%0A%0Adef main():%0A    clock = Time()%0A    while True:%0A        line = input()%0A        if not line:%0A            continue\n+def main():%0A    relogio = Watch(0, 0, 0)%0A    while True:%0A        line = input()\n %0A   \n@@ -1533,20 +1533,23 @@\n     \n-clock = Time\n+relogio = Watch\n (int\n@@ -1634,46 +1634,116 @@\n     \n-clock.set(int(args%5B1%5D), int(args%5B2%5D), \n+relogio.set_hora(int(args%5B1%5D))%0A            relogio.set_minuto(int(args%5B2%5D))%0A            relogio.set_segundo(\n int(\n@@ -1743,32 +1743,33 @@\n do(int(args%5B3%5D))\n+ \n %0A        elif ar\n@@ -1803,21 +1803,23 @@\n   print(\n-clock\n+relogio\n )%0A      \n@@ -1860,13 +1860,15 @@\n     \n-clock\n+relogio\n .nex\n@@ -1910,22 +1910,16 @@\n  print(%22\n-fail: \n comando \n@@ -1936,9 +1936,8 @@\n %0A%0Amain()\n-%0A\n",
            "lines": "73"
        },
        {
            "label": "2025-10-24_22-44-02",
            "content": "@@ -1,19 +1,18 @@\n class \n-Watch\n+Time\n :%0A    de\n@@ -1222,31 +1222,28 @@\n ():%0A    \n-relogio = Watch\n+clock = Time\n ()%0A    w\n@@ -1272,24 +1272,66 @@\n e = input()%0A\n+        if not line:%0A            continue%0A\n         prin\n@@ -1372,24 +1372,16 @@\n split()%0A\n-        \n %0A       \n@@ -1468,23 +1468,20 @@\n     \n-relogio = Watch\n+clock = Time\n (int\n@@ -1562,23 +1562,21 @@\n         \n-relogio\n+clock\n .set(int\n@@ -1664,23 +1664,21 @@\n   print(\n-relogio\n+clock\n )%0A      \n@@ -1719,15 +1719,13 @@\n     \n-relogio\n+clock\n .nex\n",
            "lines": "69"
        },
        {
            "label": "2025-10-24_22-47-56",
            "content": "@@ -35,21 +35,19 @@\n , ho\n-ra = \n+ur=\n 0, minut\n o = \n@@ -46,25 +46,20 @@\n inut\n-o = \n+e=\n 0, se\n-gundo = \n+cond=\n 0):%0A\n@@ -67,27 +67,28 @@\n        self.\n-__h\n+hour\n  = 0%0A       \n@@ -85,35 +85,38 @@\n  0%0A        self.\n-__m\n+minute\n  = 0%0A        sel\n@@ -109,35 +109,38 @@\n  0%0A        self.\n-__s\n+second\n  = 0%0A        sel\n@@ -147,35 +147,34 @@\n f.set(ho\n+u\n r\n-a\n , minut\n-o\n+e\n , se\n-gu\n+co\n nd\n-o\n )%0A%0A    d\n@@ -182,18 +182,18 @@\n f set_ho\n+u\n r\n-a\n (self, h\n@@ -193,18 +193,18 @@\n self, ho\n+u\n r\n-a\n ):%0A     \n@@ -216,18 +216,18 @@\n  0 %3C= ho\n+u\n r\n-a\n  %3C= 23:%0A\n@@ -247,18 +247,19 @@\n elf.\n-__h\n+hour\n  = ho\n+u\n r\n-a\n %0A   \n@@ -328,17 +328,17 @@\n et_minut\n-o\n+e\n (self, m\n@@ -341,17 +341,17 @@\n f, minut\n-o\n+e\n ):%0A     \n@@ -366,17 +366,17 @@\n %3C= minut\n-o\n+e\n  %3C= 59:%0A\n@@ -396,19 +396,22 @@\n elf.\n-__m\n+minute\n  = minut\n o%0A  \n@@ -406,17 +406,17 @@\n  = minut\n-o\n+e\n %0A       \n@@ -480,21 +480,20 @@\n f set_se\n-gu\n+co\n nd\n-o\n (self, s\n@@ -489,29 +489,28 @@\n ond(self, se\n-gu\n+co\n nd\n-o\n ):%0A        i\n@@ -518,21 +518,20 @@\n  0 %3C= se\n-gu\n+co\n nd\n-o\n  %3C= 59:%0A\n@@ -551,21 +551,23 @@\n elf.\n-__s\n+second\n  = se\n-gu\n+co\n nd\n-o\n %0A   \n@@ -646,27 +646,26 @@\n , ho\n+u\n r\n-a\n , minut\n-o\n+e\n , se\n-gu\n+co\n nd\n-o\n ):%0A \n@@ -739,15 +739,15 @@\n t_ho\n+u\n r\n-a\n (ho\n+u\n r\n-a\n )%0A  \n@@ -770,16 +770,16 @@\n inut\n-o\n+e\n (minut\n-o\n+e\n )%0A  \n@@ -799,21 +799,19 @@\n t_se\n-gu\n+co\n nd\n-o\n (se\n-gu\n+co\n nd\n-o\n )%0A%0A \n@@ -848,19 +848,22 @@\n    self.\n-__s\n+second\n  += 1%0A  \n@@ -876,19 +876,22 @@\n if self.\n-__s\n+second\n  %3E 59:%0A \n@@ -906,19 +906,22 @@\n    self.\n-__s\n+second\n  = 0%0A   \n@@ -934,19 +934,22 @@\n    self.\n-__m\n+minute\n  += 1%0A  \n@@ -966,19 +966,22 @@\n if self.\n-__m\n+minute\n  %3E 59:%0A \n@@ -1000,19 +1000,22 @@\n    self.\n-__m\n+minute\n  = 0%0A   \n@@ -1032,19 +1032,20 @@\n    self.\n-__h\n+hour\n  += 1%0A  \n@@ -1066,19 +1066,20 @@\n if self.\n-__h\n+hour\n  %3E 23:%0A \n@@ -1102,19 +1102,20 @@\n    self.\n-__h\n+hour\n  = 0%0A%0A  \n@@ -1162,11 +1162,12 @@\n elf.\n-__h\n+hour\n :02d\n@@ -1178,11 +1178,14 @@\n elf.\n-__m\n+minute\n :02d\n@@ -1192,19 +1192,22 @@\n %7D:%7Bself.\n-__s\n+second\n :02d%7D%22%0A%0A\n@@ -1334,16 +1334,24 @@\n split()%0A\n+        \n %0A       \n",
            "lines": "67"
        },
        {
            "label": "2025-10-24_22-52-24",
            "content": "class Watch:\n    def __init__(self, hora = 0, minuto = 0, segundo = 0):\n        self.__h = 0\n        self.__m = 0\n        self.__s = 0\n        self.set(hora, minuto, segundo)\n\n    def set_hora(self, hora):\n        if 0 <= hora <= 23:\n            self.__h = hora\n        else:\n            print(\"fail: hora invalida\")\n\n    def set_minuto(self, minuto):\n        if 0 <= minuto <= 59:\n            self.__m = minuto\n        else:\n            print(\"fail: minuto invalido\")\n\n    def set_segundo(self, segundo):\n        if 0 <= segundo <= 59:\n            self.__s = segundo\n        else:\n            print(\"fail: segundo invalido\")\n\n    def set(self, hora, minuto, segundo):\n        # Cada parte deve ser validada separadamente\n        self.set_hora(hora)\n        self.set_minuto(minuto)\n        self.set_segundo(segundo)\n\n    def nextSecond(self):\n        self.__s += 1\n        if self.__s > 59:\n            self.__s = 0\n            self.__m += 1\n            if self.__m > 59:\n                self.__m = 0\n                self.__h += 1\n                if self.__h > 23:\n                    self.__h = 0\n\n    def __str__(self):\n        return f\"{self.__h:02d}:{self.__m:02d}:{self.__s:02d}\"\n\n\ndef main():\n    relogio = Watch()\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"init\":\n            relogio = Watch(int(args[1]), int(args[2]), int(args[3]))\n        elif args[0] == \"set\":\n            relogio.set(int(args[1]), int(args[2]), int(args[3]))\n        elif args[0] == \"show\":\n            print(relogio)\n        elif args[0] == \"next\":\n            relogio.nextSecond()\n        else:\n            print(\"fail: comando invalido\")\n\nmain()\n",
            "lines": "67"
        }
    ]
}